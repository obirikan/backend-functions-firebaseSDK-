  const [searchTerm, setSearchTerm] = useState("");
  const [products, setProducts] = useState([]);
  const { active, setactive, setdata, handleLogout } = useContext(State);
  const navigation = useNavigation();
  const [searchQuery, setSearchQuery] = useState("");
  const [searchResults, setSearchResults] = useState([]);

  useEffect(() => {
    const fetchProducts = async () => {
      const productsCollection = collection(db, "Products");
      const q = query(productsCollection, orderBy("title"));

      const querySnapshot = await getDocs(q);
      const productsData = querySnapshot.docs.map((doc) => ({
        id: doc.id,
        ...doc.data(),
      }));
      setProducts(productsData);
    };

    fetchProducts();
  }, []);


  const handleSearchQuery = (query) => {
    setSearchQuery(query);

    if (query.length > 0) {
      const filteredProducts = products.filter((product) =>
        product.title.toLowerCase().includes(query.toLowerCase())
      );
      setSearchResults(filteredProducts);
    } else {
      setSearchResults([]);
    }
  };

  //this is what displays the product so its 
  const renderProduct = ({ item }) => {
    return (
      <View>
        <Text >{item.title}</Text>
      </View>
    );
  };